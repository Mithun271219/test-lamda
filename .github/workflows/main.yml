name: Deploy Lambda

on:
  push:
    branches:
      - main
      - uat
      - testing
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'main' || github.ref == 'refs/heads/uat' && 'uat' || github.ref == 'refs/heads/testing' && 'testing' || github.ref == 'refs/heads/prod' && 'prod' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variables based on branch
        id: env-setup
        run: |
          # Determine the stage and bucket name based on the branch
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "stage=main" >> $GITHUB_ENV
            echo "BUCKET_NAME=main-bucket-lambda-1" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "uat" ]]; then
            echo "stage=uat" >> $GITHUB_ENV
            echo "BUCKET_NAME=uat-bucket-lambda-1" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "testing" ]]; then
            echo "stage=testing" >> $GITHUB_ENV
            echo "BUCKET_NAME=testing-bucket-lambda-1" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "stage=prod" >> $GITHUB_ENV
            echo "BUCKET_NAME=prod-bucket-lambda-1" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Install dependencies
        run: npm install

      - name: Serverless Deployment
        run: npx serverless deploy --stage ${{ env.stage }} --region ap-south-1 --verbose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}